
<form id="co-billing-form" action="">
    <fieldset>
        <div id="test">
        <?php
            if (version_compare(Mage::getVersion(), '1.9', '<')) {
        ?>
            <style type="text/css">
            .opc select {
                height: 22px !important;
            }
            </style>
        <?php
            }
        ?>

        <?php
            if (version_compare(Mage::getVersion(), '1.9', '>=')) {
        ?>
            <p class="required" style="float:right">* Required Fields</p>
        <?php
            }
        ?>
        <ul class="form-list">
            <?php if ($this->customerHasAddresses()): ?>
                <li class="wide">
                    <label for="billing-address-select"><?php echo $this->__('Select a billing address from your address book or enter a new address.') ?></label>
                    <div class="input-box">
                        <?php echo $this->getAddressesHtmlSelect('billing') ?>
                    </div>
                </li>
                <?php endif; ?>
            <li id="billing-new-address-form"<?php if ($this->customerHasAddresses()): ?> style="display:none;"<?php endif; ?>>


                <fieldset>
                <input type="hidden" name="billing[address_id]" value="<?php echo $this->getAddress()->getId() ?>" id="billing:address_id" />
                <ul>
                <li class="fields"><?php echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getAddress()->getFirstname() ? $this->getAddress() : $this->getQuote()->getCustomer())->setForceUseCustomerRequiredAttributes(!$this->isCustomerLoggedIn())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?></li>
                <li class="fields">
                    <div class="field">
                        <label for="billing:country_id" class="required"><em>*</em><?php echo $this->__('Country') ?></label>
                        <div class="input-box">
                            <?php echo $this->getCountryHtmlSelect('billing') ?>
                        </div>
                    </div>
                </li>  
                <li class="fields">         
                <?php

                    print "<ul id='billing-row32'>";
                ?>   
                <?php $_streetValidationClass = $this->helper('customer/address')->getAttributeValidationClass('street'); ?>
                <li class="wide containers1" >
                    <label for="billing:street1" class="required"><em>*</em><?php echo $this->__('Address') ?></label>
                    <div class="input-box">
                        <input type="text" maxlength="35" title="<?php echo $this->__('Street Address') ?>" name="billing[street][]" id="billing:street1" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet(1)) ?>" class="input-text <?php echo $_streetValidationClass ?>" />
                    </div>
                </li>
                <?php $_streetValidationClass = trim(str_replace('required-entry', '', $_streetValidationClass)); ?>
                <?php for ($_i = 2, $_n = $this->helper('customer/address')->getStreetLines(); $_i <= $_n; $_i++): ?>
                    <li class="wide">
                        <label for="billing:street<?php echo $_i;?>>" class=""><?php echo $this->__('Address '.$_i) ?></label>
                        <div class="input-box">
                            <input type="text" maxlength="35" title="<?php echo $this->__('Street Address %s', $_i) ?>" name="billing[street][]" id="billing:street<?php echo $_i ?>" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet($_i)) ?>" class="input-text <?php echo $_streetValidationClass ?>" />
                        </div>
                    </li>
                    <?php endfor; ?>
                <?php if ($this->helper('customer/address')->isVatAttributeVisible()) : ?>
                    <li class="wide">
                        <label for="billing:vat_id"><?php echo $this->__('VAT Number') ?></label>
                        <div class="input-box">
                            <input type="text" id="billing:vat_id" name="billing[vat_id]" value="<?php echo $this->escapeHtml($this->getAddress()->getVatId()) ?>" title="<?php echo $this->__('VAT Number') ?>" class="input-text" />
                        </div>
                    </li>
                    <?php endif; ?>     
                <li class="fields">
                    <div class="field">
                        <label for="billing:city" class="required"><em>*</em><?php echo $this->__('City') ?></label>
                        <div class="input-box">
                            <input type="text" maxlength="30" title="<?php echo $this->__('City') ?>" name="billing[city]" value="<?php echo $this->escapeHtml($this->getAddress()->getCity()) ?>" class="input-text required-entry validate-city <?php echo $this->helper('customer/address')->getAttributeValidationClass('city') ?>" id="billing:city" />
                        </div>
                    </div>
                    <div class="field containers3" >
                        <?php
                            //    
                        ?>
                        <label for="billing:region_id" class="required"><em>*</em><?php echo $this->__('State/Province') ?></label>
                        <div class="input-box">
                            <select id="billing:region_id" name="billing[region_id]" title="<?php echo $this->__('State/Province') ?>" class="validate-select" style="display:none;">
                                <option value=""><?php echo $this->__('Please select region, state or province') ?></option>
                            </select>
                            <script type="text/javascript">
                                //<![CDATA[
                                $('billing:region_id').setAttribute('defaultValue',  "<?php echo $this->getAddress()->getRegionId() ?>");
                                //]]>
                            </script>
                            <input type="text" maxlength="30" id="billing:region" name="billing[region]" value="<?php echo $this->escapeHtml($this->getAddress()->getRegion()) ?>"  title="<?php echo $this->__('State/Province') ?>" class="input-text" style="display:none;" />
                        </div>
                    </div>
                </li>    
                <li class="fields">
                    <div class="field">
                        <label for="billing:postcode" class="required"><em>*</em><?php echo $this->__('Zip/Postal Code') ?></label>
                        <div class="input-box">
                            <input type="text" maxlength="10" title="<?php echo $this->__('Zip/Postal Code') ?>" name="billing[postcode]" id="billing:postcode" value="<?php echo $this->escapeHtml($this->getAddress()->getPostcode()) ?>" class="input-text" />
                        </div>
                    </div> 
                </li>
                <?php
                    print "</ul>";
                ?>
            </li>
            <li class="fields">
                <div class="field">
                    <label for="billing:telephone" class="required"><em>*</em><?php echo $this->__('Telephone') ?></label>
                    <div class="input-box <?php echo $this->helper('customer/address')->getAttributeValidationClass('telephone') ?>">
                        <input type="text" maxlength="20" name="billing[telephone]" value="<?php echo $this->escapeHtml($this->getAddress()->getTelephone()) ?>" title="<?php echo $this->__('Telephone') ?>" class="input-text <?php echo $this->helper('customer/address')->getAttributeValidationClass('telephone') ?> validate-digits" id="billing:telephone" />
                    </div>
                </div>
                <?php if(!$this->isCustomerLoggedIn()): ?>
                    <div class="field">
                        <label for="billing:email" class="required"><em>*</em><?php echo $this->__('Email Address') ?></label>
                        <div class="input-box">
                            <input type="text" name="billing[email]" id="billing:email" value="<?php echo $this->escapeHtml($this->getAddress()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="input-text validate-email required-entry" />
                        </div>
                    </div>
                    <?php endif; ?>
            </li>
            <?php if(!$this->isCustomerLoggedIn()): ?>

                <?php $_dob = $this->getLayout()->createBlock('customer/widget_dob') ?>
                <?php $_gender = $this->getLayout()->createBlock('customer/widget_gender') ?>
                <?php if ($_dob->isEnabled() || $_gender->isEnabled()): ?>
                    <li class="fields">
                        <?php if ($_dob->isEnabled()): ?>
                            <div class="field">
                                <?php echo $_dob->setDate($this->getQuote()->getCustomerDob())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                            </div>
                            <?php endif; ?>
                        <?php if ($_gender->isEnabled()): ?>
                            <div class="field">
                                <?php echo $_gender->setGender($this->getQuote()->getCustomerGender())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                            </div>
                            <?php endif ?>
                    </li>
                    <?php endif ?>

                <?php if ($this->isTaxvatEnabled()):?>
                    <li><?php echo $this->getTaxvatHtml() ?></li>
                    <?php endif; ?>

                <li class="fields" id="register-customer-password">
                    <div class="field">
                        <label for="billing:customer_password" class="required"><em>*</em><?php echo $this->__('Password') ?></label>
                        <div class="input-box">
                            <input type="password" name="billing[customer_password]" id="billing:customer_password" title="<?php echo $this->__('Password') ?>" class="input-text" />
                        </div>
                    </div>
                    <div class="field">
                        <label for="billing:confirm_password" class="required"><em>*</em><?php echo $this->__('Confirm Password') ?></label>
                        <div class="input-box">
                            <input type="password" name="billing[confirm_password]" title="<?php echo $this->__('Confirm Password') ?>" id="billing:confirm_password" class="input-text" />
                        </div>
                    </div>
                </li>
                <?php echo $this->getChildHtml('persistent.remember.me'); ?>
                <?php endif; ?>
            <?php if ($this->isCustomerLoggedIn() && $this->customerHasAddresses()):?>
                <li class="control">
                    <input type="checkbox" name="billing[save_in_address_book]" value="1" title="<?php echo $this->__('Save in address book') ?>" id="billing:save_in_address_book" onchange="if(window.shipping) shipping.setSameAsBilling(false);"<?php if ($this->getAddress()->getSaveInAddressBook()):?> checked="checked"<?php endif;?> class="checkbox" /><label for="billing:save_in_address_book"><?php echo $this->__('Save in address book') ?></label>
                </li>
                <?php else:?>
                <li class="no-display"><input type="hidden" name="billing[save_in_address_book]" value="1" /></li>
                <?php endif; ?>
            <?php echo $this->getChildHtml('form.additional.info'); ?>
        </ul>
        <?php echo $this->getChildHtml('persistent.remember.me.tooltip'); ?>
    </fieldset>

    </li>
    <?php if ($this->canShip()): ?>
        <li class="control">
            <input type="radio" name="billing[use_for_shipping]" id="billing:use_for_shipping_yes" value="1"<?php if ($this->isUseBillingAddressForShipping()) {?> checked="checked"<?php }?> title="<?php echo  $this->__('Ship to this address') ?>" onclick="$('shipping:same_as_billing').checked = true;" class="radio" /><label for="billing:use_for_shipping_yes"><?php echo  $this->__('Ship to this address') ?></label></li>
        <li class="control">
            <input type="radio" name="billing[use_for_shipping]" id="billing:use_for_shipping_no" value="0"<?php if (!$this->isUseBillingAddressForShipping()) {?> checked="checked"<?php }?> title="<?php echo $this->__('Ship to different address') ?>" onclick="$('shipping:same_as_billing').checked = false;" class="radio" /><label for="billing:use_for_shipping_no"><?php echo $this->__('Ship to different address') ?></label>
        </li>
        <?php endif; ?>
    </ul>       
    </div>
    <?php if (!$this->canShip()): ?>
        <input type="hidden" name="billing[use_for_shipping]" value="1" />
        <?php endif; ?>
    <div class="buttons-set" id="billing-buttons-container">
        <?php
            if (version_compare(Mage::getVersion(), '1.9', '<')) {
        ?>
        <p class="required"><?php echo $this->__('* Required Fields') ?></p>
        <?php
            }
        ?>
        <button type="button" title="<?php echo $this->__('Continue') ?>" class="button" onclick="validateAddress('billing');"><span><span><?php echo $this->__('Continue') ?></span></span></button>
        <span class="please-wait" id="billing-please-wait" style="display:none;">
            <img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" alt="<?php echo $this->__('Loading next step...') ?>" title="<?php echo $this->__('Loading next step...') ?>" class="v-middle" /> <?php echo $this->__('Loading next step...') ?>
        </span>
    </div>

    </fieldset>
</form>
<script type="text/javascript">
    //<![CDATA[
    var cache_values = [], cache_values_fail = [];
    var cache_values_zip = [], cache_values_fail_zip = [];
    var billing = new Billing('co-billing-form', '<?php echo $this->getUrl('checkout/onepage/getAddress') ?>address/', '<?php echo $this->getUrl('checkout/onepage/saveBilling') ?>');
    var billingForm = new VarienForm('co-billing-form');
    
    $('billing-address-select') && billing.newAddress(!$('billing-address-select').value);

    var billingRegionUpdater = new RegionUpdater('billing:country_id', 'billing:region', 'billing:region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'billing:postcode');
    if ($('onepage-guest-register-button')) {
        Event.observe($('onepage-guest-register-button'), 'click', function(event) {
            var billingRememberMe = $('co-billing-form').select('#remember-me-box');
            if (billingRememberMe.length > 0) {
                if ($('login:guest') && $('login:guest').checked) {
                    billingRememberMe[0].hide();
                } else if ($('login:register') && ($('login:register').checked || $('login:register').type == 'hidden')) {
                    billingRememberMe[0].show();
                }
            }
        });
    }
        var countryArray = Array();
    <?php
        $specificCountry =  Mage::getStoreConfig('carriers/swipezoom/sallowspecific',Mage::app()->getStore());

        if($specificCountry == 1){
            $specificCountryList =  Mage::getStoreConfig('carriers/swipezoom/specificcountry',Mage::app()->getStore());
            if(!empty($specificCountryList)){
                $specificCountryList = ",".$specificCountryList.",";
            }
        }

    ?>
    var countryList = "<?php echo $specificCountryList   ?>"; 

    RegionUpdater.addMethods({
        update: function()
        {
            //  alert("new update");
            
            
            var flag3 = false;

            if(countryList == ""){
                flag3 = true;
            }
            if(countryList != " "){
                if(countryList.indexOf(this.countryEl.value) >= 0 ){
                    flag3 = true;
                }    
            }
            
            if (this.regions[this.countryEl.value]) {
                var i, option, region, def;

                def = this.regionSelectEl.getAttribute('defaultValue');
                if (this.regionTextEl) {
                    if (!def) {
                        def = this.regionTextEl.value.toLowerCase();
                    }
                    this.regionTextEl.value = '';
                }

                this.regionSelectEl.options.length = 1;
                for (regionId in this.regions[this.countryEl.value]) {
                    region = this.regions[this.countryEl.value][regionId];

                    option = document.createElement('OPTION');
                    option.value = regionId;
                    option.text = region.name.stripTags();
                    option.title = region.name;

                    if (this.regionSelectEl.options.add) {
                        this.regionSelectEl.options.add(option);
                    } else {
                        this.regionSelectEl.appendChild(option);
                    }

                    if (regionId==def || (region.name && region.name.toLowerCase()==def) ||
                    (region.name && region.code.toLowerCase()==def)
                    ) {
                        this.regionSelectEl.value = regionId;
                    }
                }

                if (this.disableAction=='hide') {
                    if (this.regionTextEl) {
                        this.regionTextEl.style.display = 'none';
                    }

                    this.regionSelectEl.style.display = '';
                } else if (this.disableAction=='disable') {
                    if (this.regionTextEl) {
                        this.regionTextEl.disabled = true;
                    }
                    this.regionSelectEl.disabled = false;
                }
                
                            if(flag3 == false){
                                this.setMarkDisplay(this.regionSelectEl, true);
                            }
            } else {
                if (this.disableAction=='hide') {
                    if (this.regionTextEl) {
                        this.regionTextEl.style.display = '';
                    }
                    this.regionSelectEl.style.display = 'none';
                    Validation.reset(this.regionSelectEl);
                } else if (this.disableAction=='disable') {
                    if (this.regionTextEl) {
                        this.regionTextEl.disabled = false;
                    }
                    this.regionSelectEl.disabled = true;
                } else if (this.disableAction=='nullify') {
                    this.regionSelectEl.options.length = 1;
                    this.regionSelectEl.value = '';
                    this.regionSelectEl.selectedIndex = 0;
                    this.lastCountryId = '';
                }
                                if(flag3 == false){
                                    // this.setMarkDisplay(this.regionSelectEl, false);
                                }
                // 
            }

            if(flag3 == false){
              //alert("")
                this._checkRegionRequired();
                // Make Zip and its label required/optional
                var zipUpdater = new ZipUpdater(this.countryEl.value, this.zipEl);
                zipUpdater.update();
            }
        }

    });  
    
    function formatAddress(type){

        checkout.setLoadWaiting(type);
        $(type+"-new-address-form").setStyle({opacity:"0.5"});
        var countrycode=$(type+':country_id').value;

        new Ajax.Request('<?php echo $this->getUrl('internationalshipping/index/index') ?>',{
            type: "POST", 
            parameters: {countrycode:countrycode,type:type},
            cache: false,
            onSuccess: function(transport) {
                var response = transport.responseText || "no response text";

                $(type+"-row32").replace(response);
                $(type+"-new-address-form").removeAttribute("style");
                
                if($(type+':region')){
                    if(type == "billing"){
                        var billingRegionUpdater1 = new RegionUpdater('billing:country_id', 'billing:region', 'billing:region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'billing:postcode');
                        billingRegionUpdater1.update();        
                    }else{
                        var shippingRegionUpdater1 = new RegionUpdater('shipping:country_id', 'shipping:region', 'shipping:region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'shipping:postcode');
                        shippingRegionUpdater1.update();

                        if($('shipping:same_as_billing').checked) {
                            arrElements = Form.getElements('co-shipping-form');
                            for (var elemIndex in arrElements) {
                                if (arrElements[elemIndex].id) {
                                    var sourceField = $(arrElements[elemIndex].id.replace(/^shipping:/, 'billing:'));
                                    if (sourceField){
                                        arrElements[elemIndex].value = sourceField.value;
                                    }
                                }
                            }
                            
                            shippingRegionUpdater1.update();
                            $('shipping:region_id').value = $('billing:region_id').value;
                            $('shipping:region').value = $('billing:region').value;
                        }
                    }

                }

                checkout.setLoadWaiting(false);
            },
            onFailure: function() { alert('Something went wrong...'); 
                checkout.setLoadWaiting(false);
            }
        });
    }
    Event.observe($('billing:country_id'), 'change', function(){
        formatAddress("billing");   
    });  

    document.observe("dom:loaded", function() {
        formatAddress("billing"); 
    });


    function validateAddress(type)
    {
        var flag = false;

        if(countryList == ""){
            flag = true;
        }
        if(countryList != " "){
            if(countryList.indexOf($(type+':country_id').value) >= 0 ){
                flag = true;
            }    
        }

        if(flag == false){

            if(type == "billing"){
                billing.save();    
            }else{
                shipping.save();    
            }

        }else{

            var validator = new Validation("co-"+type+"-form");
            if (validator.validate()) {
                var region;
                var regionname;
                var postcode;
                var city;

                checkout.setLoadWaiting(type);
                var country=$F(type+':country_id');

                if($(type+':region_id'))
                    var region=$F(type+':region_id');

                if($('billing:region'))
                    regionname=$F(type+':region');

                if($(type+':postcode'))
                    postcode=$F(type+':postcode');

                if($(type+':street1'))
                    var street1=$F(type+':street1');

                if($(type+':street2'))
                    var street2=$F(type+':street2');  

                var sameasshipping = $('shipping:same_as_billing').checked;

                if(sameasshipping == false && $("billing:use_for_shipping_yes").checked){
                    sameasshipping = "true"
                }

                if($(type+':city'))
                    city=$F(type+':city');  
                
                new Ajax.Request('<?php echo $this->getUrl("internationalshipping/index/CheckAddress") ?>',{
                    type: "POST", 
                    parameters: {country:country,region:region,regionname:regionname,postcode:postcode,street1:street1,street2:street2,city:city,type:type,sameasshipping:sameasshipping},
                    cache: false,
                    onSuccess: function(transport) {

                        //  validate
                        checkout.setLoadWaiting(false);

                        var response = transport.responseText || "no response text";
                        var json = response.evalJSON();
                        if(!json.success){
                            for(var i=0;i<json.length;i++){
                                if(json[i]["name"] == "region"){
                                    if($(type+":region_id").getStyle("display") == "none")json[i]["name"] ="region";else json[i]["name"] = "region_id";
                                }
                                Validation.ajaxError($(type+":"+json[i]["name"]), json[i]["error"]); 
                            }
                        }else{

                            if(type == "billing")
                                billing.save();
                            else
                                shipping.save(); 
                        }

                    },
                    onFailure: function() { alert('Something went wrong...'); 
                        checkout.setLoadWaiting(false);
                    }
                });
            }
        }
    }

    //]]>
</script>